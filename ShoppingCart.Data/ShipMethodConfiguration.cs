// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ShoppingCart.Data
{

    // ShipMethods
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ShipMethodConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ShipMethod>
    {
        public ShipMethodConfiguration()
            : this("dbo")
        {
        }

        public ShipMethodConfiguration(string schema)
        {
            ToTable("ShipMethods", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"name").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(75);
            Property(x => x.Providerinfo).HasColumnName(@"providerinfo").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(25);
            Property(x => x.Sortorder).HasColumnName(@"sortorder").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
