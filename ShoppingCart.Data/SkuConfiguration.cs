// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ShoppingCart.Data
{

    // Skus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class SkuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Sku>
    {
        public SkuConfiguration()
            : this("dbo")
        {
        }

        public SkuConfiguration(string schema)
        {
            ToTable("Skus", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Productid).HasColumnName(@"productid").HasColumnType("int").IsRequired();
            Property(x => x.Color).HasColumnName(@"color").HasColumnType("nvarchar").IsOptional().HasMaxLength(5);
            Property(x => x.ColorName).HasColumnName(@"color_name").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.Size).HasColumnName(@"size").HasColumnType("nvarchar").IsOptional().HasMaxLength(15);
            Property(x => x.Subsize).HasColumnName(@"subsize").HasColumnType("nvarchar").IsOptional().HasMaxLength(15);
            Property(x => x.Nwi).HasColumnName(@"nwi").HasColumnType("int").IsOptional();
            Property(x => x.Stockstatus).HasColumnName(@"stockstatus").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Price).HasColumnName(@"price").HasColumnType("decimal").IsOptional().HasPrecision(15,2);
            Property(x => x.SpecialPrice).HasColumnName(@"special_price").HasColumnType("decimal").IsOptional().HasPrecision(10,2);
            Property(x => x.InstockQty).HasColumnName(@"instock_qty").HasColumnType("int").IsOptional();
            Property(x => x.RetailPrice).HasColumnName(@"retail_price").HasColumnType("decimal").IsOptional().HasPrecision(15,2);
            Property(x => x.Cost).HasColumnName(@"cost").HasColumnType("decimal").IsOptional().HasPrecision(15,2);
            Property(x => x.Sizeorder).HasColumnName(@"sizeorder").HasColumnType("int").IsRequired();
            Property(x => x.Subsizeorder).HasColumnName(@"subsizeorder").HasColumnType("int").IsRequired();
            Property(x => x.SpCmpPrice).HasColumnName(@"sp_cmp_price").HasColumnType("decimal").IsOptional().HasPrecision(15,2);
            Property(x => x.CmpAtPrice).HasColumnName(@"cmp_at_price").HasColumnType("decimal").IsOptional().HasPrecision(15,2);
            Property(x => x.SecondSku).HasColumnName(@"second_sku").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.DepartmentId).HasColumnName(@"departmentId").HasColumnType("int").IsRequired();
            Property(x => x.ClubPrice).HasColumnName(@"club_price").HasColumnType("decimal").IsOptional().HasPrecision(15,2);
            Property(x => x.ModifiedDts).HasColumnName(@"modified_dts").HasColumnType("datetime").IsRequired();

            // Foreign keys
            HasRequired(a => a.Department).WithMany(b => b.Skus).HasForeignKey(c => c.DepartmentId).WillCascadeOnDelete(false); // FK_department_ToSkuu
            HasRequired(a => a.Product).WithMany(b => b.Skus).HasForeignKey(c => c.Productid).WillCascadeOnDelete(false); // FK_Product_ToSku
        }
    }

}
// </auto-generated>
