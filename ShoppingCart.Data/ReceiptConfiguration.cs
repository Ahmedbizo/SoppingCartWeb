// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ShoppingCart.Data
{

    // Receipts
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ReceiptConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Receipt>
    {
        public ReceiptConfiguration()
            : this("dbo")
        {
        }

        public ReceiptConfiguration(string schema)
        {
            ToTable("Receipts", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Customerid).HasColumnName(@"customerid").HasColumnType("int").IsRequired();
            Property(x => x.Dts).HasColumnName(@"dts").HasColumnType("datetime").IsRequired();
            Property(x => x.Gsttotal).HasColumnName(@"gsttotal").HasColumnType("decimal").IsOptional().HasPrecision(15,4);
            Property(x => x.Psttotal).HasColumnName(@"psttotal").HasColumnType("decimal").IsOptional().HasPrecision(15,4);
            Property(x => x.Linecount).HasColumnName(@"linecount").HasColumnType("int").IsRequired();
            Property(x => x.Shippingbasetax).HasColumnName(@"shippingbasetax").HasColumnType("decimal").IsOptional().HasPrecision(15,4);
            Property(x => x.Shippingpremiumtax).HasColumnName(@"shippingpremiumtax").HasColumnType("decimal").IsOptional().HasPrecision(15,4);
            Property(x => x.Shippingtaxtotal).HasColumnName(@"shippingtaxtotal").HasColumnType("decimal").IsOptional().HasPrecision(15,4);
            Property(x => x.Subtotal).HasColumnName(@"subtotal").HasColumnType("decimal").IsRequired().HasPrecision(12,2);
            Property(x => x.Taxtotal).HasColumnName(@"taxtotal").HasColumnType("decimal").IsRequired().HasPrecision(15,4);
            Property(x => x.Version).HasColumnName(@"version").HasColumnType("nvarchar").IsRequired().HasMaxLength(8);
            Property(x => x.Shipmethodid).HasColumnName(@"shipmethodid").HasColumnType("int").IsRequired();
            Property(x => x.Shiprateid).HasColumnName(@"shiprateid").HasColumnType("int").IsRequired();
            Property(x => x.Shipname).HasColumnName(@"shipname").HasColumnType("nvarchar").IsRequired().HasMaxLength(75);
            Property(x => x.Shipstartamount).HasColumnName(@"shipstartamount").HasColumnType("decimal").IsRequired().HasPrecision(12,2);
            Property(x => x.Shipendamount).HasColumnName(@"shipendamount").HasColumnType("decimal").IsRequired().HasPrecision(12,2);
            Property(x => x.Paymentid).HasColumnName(@"paymentid").HasColumnType("int").IsRequired();
            Property(x => x.Paymentname).HasColumnName(@"paymentname").HasColumnType("nvarchar").IsRequired().HasMaxLength(35);
            Property(x => x.Ccnumber).HasColumnName(@"ccnumber").HasColumnType("nvarchar").IsOptional().HasMaxLength(25);
            Property(x => x.Expirationmonth).HasColumnName(@"expirationmonth").HasColumnType("int").IsOptional();
            Property(x => x.Expirationyear).HasColumnName(@"expirationyear").HasColumnType("int").IsOptional();
            Property(x => x.Orderflags).HasColumnName(@"orderflags").HasColumnType("nvarchar").IsRequired().HasMaxLength(15);
            Property(x => x.Customernotes).HasColumnName(@"customernotes").HasColumnType("text").IsOptional().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.Lastactivity).HasColumnName(@"lastactivity").HasColumnType("datetime").IsRequired();
            Property(x => x.Cvv2).HasColumnName(@"cvv2").HasColumnType("nvarchar").IsOptional().HasMaxLength(4);
            Property(x => x.Shipfirstname).HasColumnName(@"shipfirstname").HasColumnType("nvarchar").IsRequired().HasMaxLength(35);
            Property(x => x.Shiplastname).HasColumnName(@"shiplastname").HasColumnType("nvarchar").IsRequired().HasMaxLength(35);
            Property(x => x.Shipcompany).HasColumnName(@"shipcompany").HasColumnType("nvarchar").IsOptional().HasMaxLength(45);
            Property(x => x.Shipaddress1).HasColumnName(@"shipaddress1").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Shipaddress2).HasColumnName(@"shipaddress2").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Shipcity).HasColumnName(@"shipcity").HasColumnType("nvarchar").IsRequired().HasMaxLength(35);
            Property(x => x.Shipstate).HasColumnName(@"shipstate").HasColumnType("nvarchar").IsRequired().HasMaxLength(10);
            Property(x => x.Shipzipcode).HasColumnName(@"shipzipcode").HasColumnType("nvarchar").IsRequired().HasMaxLength(10);
            Property(x => x.Shipphone).HasColumnName(@"shipphone").HasColumnType("nvarchar").IsRequired().HasMaxLength(20);
            Property(x => x.Grid).HasColumnName(@"grid").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.ShippingBase).HasColumnName(@"shipping_base").HasColumnType("decimal").IsRequired().HasPrecision(12,2);
            Property(x => x.ShippingPremiums).HasColumnName(@"shipping_premiums").HasColumnType("decimal").IsRequired().HasPrecision(12,2);
            Property(x => x.InternalNotes).HasColumnName(@"internalNotes").HasColumnType("text").IsOptional().IsUnicode(false).HasMaxLength(2147483647);
            Property(x => x.CouponCode).HasColumnName(@"couponCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(15);
            Property(x => x.CouponCodeId).HasColumnName(@"couponCodeId").HasColumnType("int").IsOptional();
            Property(x => x.Discounts).HasColumnName(@"discounts").HasColumnType("decimal").IsOptional().HasPrecision(12,2);

            // Foreign keys
            HasRequired(a => a.Customer).WithMany(b => b.Receipts).HasForeignKey(c => c.Customerid).WillCascadeOnDelete(false); // FK_Customer_ToReceipt
            HasRequired(a => a.ShipMethod).WithMany(b => b.Receipts).HasForeignKey(c => c.Shipmethodid).WillCascadeOnDelete(false); // FK_ShipMethod_ToReceipt
        }
    }

}
// </auto-generated>
